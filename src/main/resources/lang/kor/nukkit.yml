# Nukkit을 위한 고급 설정 파일입니다.
# 이 설정들 중 일부는 안전하지만, 또 다른 것들은 잘못 수정했을경우 서버에 오류가 발생할 수 있습니다.
# 새로운 설정/기본 설정들은 이 파일을 업데이트할 때 자동으로 나타나지는 않습니다.

settings:
 # 다중 언어 설정
 # 가능한 언어: eng, chs, cht, jpn, rus, spa, pol, bra, kor, ukr, deu, ltu
 language: "kor"
 # 모든 번역본을 서버 언어로 설정하거나 기기가 조정할 수 있게 허락합니다.
 force-language: false
 shutdown-message: "Server closed"
 # Query를 통한 플러그인 리스트 보기 허용
 query-plugins: true
 # 플러그인이 사용되지 않는 API 메서드를 사용할 때에 알립니다.
 deprecated-verbose: true
 # AsyncTask Works의 갯수
 # 만약 자동 (auto) 으로 설정하시면, 자동으로 코어의 갯수를 감지합니다. (최소 4)
 async-workers: auto

network:
 # 배치 패킷에 대한 임계값을 설정합니다. Byte 단위입니다. 이 패킷만 압축됩니다.
 # 0으로 설정하시면 모두 압축하고, -1으로 설정하시면 비활성화 됩니다.
 batch-threshold: 256
 # 배치 패킷을 전송할 때 Zlib에 사용되는 압축 레벨 입니다. 높은 값 = 더 많은 CPU 사용량, 적은 대역폭을 사용합니다.
 compression-level: 7
 # 압축할 때 AsyncTasks를 사용합니다. 0.5틱/1틱 딜레이를 추가합니다. 메인 쓰레드에 더 적은 CPU를 사용합니다.
 async-compression: false

debug:
 # 설정값이 1보다 크면, 콘솔 메시지에 디버그 메시지를 표시합니다.
 level: 1
 # /status 와 /gc 커맨드를 활성화 합니다.
 commands: false

timings:
 #Enable core and plugin timings by default
 enabled: false
 #Enable monitoring at verbose level, include high-frequency timings
 verbose: false
 #Interval between history frames in ticks
 #Default is 5 minutes (6000 ticks)
 history-interval: 6000
 #Length of the whole timing history in ticks
 #Default is 1 hour (72000 ticks)
 #This value is capped at a maximum of history-interval * 12
 history-length: 72000
 #For special cases of servers with special permission to bypass the max
 #This max helps keep data file sizes reasonable for processing on Aikar's Timing parser side
 #Setting this will not help you bypass the max unless Aikar has added an exception on the API side
 bypass-max: false
 #If set to true, name of your server won't be sent
 privacy: false
 #Settings sections to ignore. These sections won't be sent to Aikar's Timing parser
 #For example: [all] or [settings, timings]
 ignore: []

level-settings:
 # 레벨 (맵) 이 생성 될 때의 기본 포맷
 default-format: anvil
 # 자동으로 TPS (Ticks Per Second) 20 을 유지하기 위해 레벨의 틱을 조정합니다.
 auto-tick-rate: true
 auto-tick-rate-limit: 20
 # 기본 틱을 설정합니다 (1 = TPS 20, 2 = TPS 10, 그 외...)
 base-tick-rate: 1
 # 다른 설정이 이를 비활성화 하더라도 모든 플레이어를 틱 처리합니다.
 always-tick-players: false

chunk-sending:
 # 틱 당 플레이어에게 보낼 청크의 양
 per-tick: 4
 # 각각의 플레이어에게 보낼 청크의 양
 max-chunks: 192
 # 플레이어가 스폰되지 전에 보내지는 청크의 양
 spawn-threshold: 56
 # 빠른 전송을 위해 메모리에 직렬화된 청크의 복사본을 저장합니다.
 # 큰 변화가 없고 같은 시간에 많은 플레이어들이 게임에 참여할 때 좋습니다.
 cache-chunks: false

chunk-ticking:
 # 각각의 틱 당 처리될 청크의 양
 per-tick: 40
 # 플레이어 주변의 청크의 범위를 확인합니다.
 tick-radius: 3
 light-updates: false
 clear-tick-list: false

chunk-generation:
 # 최댓값, 생성 대기 중의 청크의 양
 queue-size: 8
 # 최댓값, 거주 대기 중의 청크의 양
 population-queue-size: 8

ticks-per:
 animal-spawns: 400
 monster-spawns: 1
 autosave: 6000
 cache-cleanup: 900

spawn-limits:
 # 이 엔티티들의 최대 스폰량
 monsters: 70
 animals: 15
 water-animals: 5
 ambient: 15
 
player:
 #If true, player data will be saved as players/playername.dat
 #If false, nukkit won't save player data as "dat" files, in order that plugins can do something on it.
 save-player-data: true
 
aliases:
 # 커맨드의 별칭
 # 예:
 # showtheversion: version
 # savestop: [save-all, stop]

worlds:
 # 이 설정은 server.properties에 있는 설정을 덮어씌우고, 여러 레벨 로드를 허용합니다.
 # 예:
 # world:
 # seed: 404
 # generator: FLAT:2;7,59x1,3x3,2;1;decoration(treecount=80 grasscount=45)
